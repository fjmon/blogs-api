const categoryService = require(
    '../services/category.service',
);
const postService = require(
    '../services/post.service',
);

const validaPost = async (req, res, next) => {
    const {
        title, content, categoryIds,
    } = req.body;
    if (!title || !content || !categoryIds) {
        return res.status(400).json({
            message: 'Some required fields are missing',
        });
    }
    const verCategories = (await categoryService
        .allCategories())
        .map((category) => categoryIds
            .includes(category.id));
    if (!verCategories.every((category) => category)) {
        return res.status(400).json({
            message: 'one or more "categoryIds" not found',
        });
    }
    next();
};

const validaUpPost = async (req, res, next) => {
    const {
        params: { id },
        body: { title, content },
        user,
    } = req;
    if (!title || !content) {
        return res.status(400)
            .json({
                message: 'Some required fields are missing',
            });
    }
    const post = await postService.postById(id);
    if (post.user.id !== user.id) {
        return res.status(401).json({
            message: 'Unauthorized user',
        });
    }
    next();
};

const validaDelPost = async (req, res, next) => {
    const { params: { id }, user } = req;
    const post = await postService.postById(id);
    if (!post) return res.status(404).json({ message: 'Post does not exist' });
    if (post.user.id !== user.id) return res.status(401).json({ message: 'Unauthorized user' });
    next();
  };

module.exports = {
    validaPost,
    validaUpPost,
    validaDelPost,
};
// stop